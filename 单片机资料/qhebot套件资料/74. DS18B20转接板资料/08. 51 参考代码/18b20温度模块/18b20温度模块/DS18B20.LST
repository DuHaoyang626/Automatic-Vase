C51 COMPILER V9.52.0.0   DS18B20                                                           09/09/2019 15:36:33 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN DS18B20.OBJ
COMPILER INVOKED BY: D:\keil4\a1\C51\BIN\C51.EXE DS18B20.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          
   2          #define _DS18B20_C
   3          #include "DS18B20.h"
   4          
   5          
   6          void Delay_DS18B20(int num)
   7          {
   8   1        while(num--) ;
   9   1      }
  10          
  11          /*
  12          * 函数名：Init_DS18B20
  13          * 描  述：初始化DS18B20复位总线，获取存在脉冲，以启动一次读写操作
  14          */
  15          void Init_DS18B20(void)
  16          {
  17   1        unsigned char x=0;
  18   1        DQ = 1;         //DQ复位
  19   1        Delay_DS18B20(8);    //稍做延时
  20   1        DQ = 0;         //单片机将DQ拉低
  21   1        Delay_DS18B20(80);   //精确延时，大于480us
  22   1        DQ = 1;         //拉高总线
  23   1        Delay_DS18B20(14);
  24   1        x = DQ;           //稍做延时后，如果x=0则初始化成功，x=1则初始化失败
  25   1        Delay_DS18B20(20);
  26   1      }
  27          /*
  28          * 函数名：Write18B20
  29          * 描  述：向DS18B20写入一个字节数据
  30          * 输  入：dat - 待写入的字节数据
  31          * 输  出：无
  32          */
  33          void Write18B20(unsigned char dat)
  34          {
  35   1        unsigned char i=0;
  36   1        for (i=8; i>0; i--)
  37   1        {
  38   2          DQ = 0;
  39   2          DQ = dat&0x01;
  40   2          Delay_DS18B20(5);
  41   2          DQ = 1;
  42   2          dat>>=1;
  43   2        }
  44   1      }
  45          /*
  46          * 函数名：Read18B20
  47          * 描  述：向DS18B20写入一个字节数据
  48          * 输  入：无
  49          * 输  出：返回值 - 读到的字节数据
  50          */
  51          unsigned char Read18B20(void)
  52          {
  53   1        unsigned char i=0;
  54   1        unsigned char dat = 0;
  55   1        for (i=8;i>0;i--)
C51 COMPILER V9.52.0.0   DS18B20                                                           09/09/2019 15:36:33 PAGE 2   

  56   1        {
  57   2          DQ = 0;     // 给脉冲信号
  58   2          dat>>=1;
  59   2          DQ = 1;     // 给脉冲信号
  60   2          if(DQ)
  61   2          dat|=0x80;
  62   2          Delay_DS18B20(4);
  63   2        }
  64   1        return(dat);
  65   1      }
  66          
  67          /*
  68          * 函数名：Get18B20Temp
  69          * 描  述：读取DS18B20的温度值，并开始下一次转换
  70          * 输  入：无
  71          * 输  出：返回值 - 读取到的温度值（只保留整数部分）
  72          */
  73          float Get18B20Temp(void)
  74          {
  75   1        unsigned int Temp_L,Temp_H;
  76   1        unsigned int Temputer;
  77   1        unsigned char Temp_Flag;
  78   1        float tmp = 0;
  79   1      
  80   1          Init_DS18B20();
  81   1        Write18B20(0xCC); //发Skip ROM命令
  82   1        Write18B20(0x44); //发读命令
  83   1        Init_DS18B20();
  84   1        Write18B20(0xCC); //发Skip ROM命令
  85   1        Write18B20(0xBE); //发读命令
  86   1        Temp_L = Read18B20();  //温度低8位
  87   1        Temp_H = Read18B20();  //温度高8位
  88   1        
  89   1        if((Temp_H & 0xF8) != 0x00)
  90   1        {
  91   2          Temp_Flag = 1;
  92   2          Temputer = ((Temp_H<<8)|Temp_L);
  93   2          Temputer = ((~Temputer) + 1);
  94   2        }
  95   1        else
  96   1        {
  97   2          Temp_Flag = 0;
  98   2          Temputer = (Temp_H<<8)|Temp_L;
  99   2        }
 100   1        tmp = Temputer;
 101   1        tmp = tmp*0.0625;
 102   1        return (tmp);
 103   1      }
 104          
 105          /*
 106          * 函数名：DS18B20Init
 107          * 描  述：DS18B20初始化函数，开始一次转换以备直接读取
 108          */
 109          void DS18B20Init(void)
 110          {
 111   1        Init_DS18B20();
 112   1        Write18B20(0xCC);  //Skip ROM
 113   1        Write18B20(0x44);  //发转换命令
 114   1        Init_DS18B20();
 115   1        Write18B20(0xCC); //发Skip ROM命令
 116   1        Write18B20(0xBE); //发读命令
 117   1      }
C51 COMPILER V9.52.0.0   DS18B20                                                           09/09/2019 15:36:33 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    246    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
