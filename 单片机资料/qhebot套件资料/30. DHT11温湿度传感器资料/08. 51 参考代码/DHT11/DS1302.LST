C51 COMPILER V9.52.0.0   DS1302                                                            11/17/2019 12:05:30 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN DS1302.OBJ
COMPILER INVOKED BY: D:\keil4\a1\C51\BIN\C51.EXE DS1302.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "DS1302.h"
   2          #include <stdio.h>
   3          
   4          //DS1302初始化函数
   5          void ds1302_init(void) {
   6   1        RST=0;      //RST脚置低
   7   1        SCLK=0;     //SCLK脚置低
   8   1      }
   9          
  10          
  11          /********************************************************************
  12          * 名称 : dectobcd(uchar dec)
  13          * 功能 : DEC码转换为BCD码
  14          * 输入 : dec码
  15          * 输出 : bcd码
  16          ***********************************************************************/
  17          unsigned char dectobcd(unsigned char dec)
  18          {
  19   1        unsigned char bcd;
  20   1        bcd = 0;
  21   1        while(dec >= 10)
  22   1        {              
  23   2          dec -= 10;                         
  24   2          bcd++;
  25   2        } 
  26   1        bcd <<= 4;
  27   1        bcd |= dec;
  28   1        return bcd;
  29   1      }
  30          
  31          //向DS302写入时钟数据
  32          void ds1302_write_time(unsigned char year,unsigned char month,unsigned char day,unsigned char week,unsigne
             -d char hour,unsigned char min,unsigned char sec) {
  33   1        ds1302_init();
  34   1        ds1302_write_byte(ds1302_control_add,0x00);   //关闭写保护 
  35   1        ds1302_write_byte(ds1302_sec_add,0x80);       //暂停时钟 
  36   1        //ds1302_write_byte(ds1302_charger_add,0xa9); //涓流充电 
  37   1        ds1302_write_byte(ds1302_year_add,  dectobcd(year));    //年 
  38   1        ds1302_write_byte(ds1302_month_add, dectobcd(month));   //月 
  39   1        ds1302_write_byte(ds1302_date_add,  dectobcd(day));     //日 
  40   1        ds1302_write_byte(ds1302_hr_add,    dectobcd(hour));    //时 
  41   1        ds1302_write_byte(ds1302_min_add,   dectobcd(min));     //分
  42   1        ds1302_write_byte(ds1302_sec_add,   dectobcd(sec));     //秒
  43   1        ds1302_write_byte(ds1302_day_add,   dectobcd(week));    //周 
  44   1        ds1302_write_byte(ds1302_control_add,0x80);   //打开写保护     
  45   1      }
  46          
  47          
  48          /********************************************************************
  49          * 名称 : bcdtodec(uchar bcd)
  50          * 功能 : BCD码转换为DEC码
  51          * 输入 : bcd码
  52          * 输出 : dec码
  53          ***********************************************************************/
  54          unsigned char bcdtodec(unsigned char bcd)
C51 COMPILER V9.52.0.0   DS1302                                                            11/17/2019 12:05:30 PAGE 2   

  55          {
  56   1        unsigned char data1;
  57   1        data1 = bcd & 0x0f;     //取BCD低4位
  58   1        bcd = bcd & 0x70;       //剔除BCD的最高位和低4位。
  59   1        data1 += bcd >> 1;
  60   1        data1 += bcd >> 3;      //用位移代替乘法运算
  61   1        return data1;
  62   1      }
  63          
  64          //从DS302读出时钟数据
  65          void ds1302_read_data(unsigned char dat[7])  
  66          {
  67   1        dat[0]=bcdtodec (ds1302_read_byte(ds1302_year_add) );   //年 
  68   1        dat[1]=bcdtodec (ds1302_read_byte(ds1302_month_add) );    //月 
  69   1        dat[2]=bcdtodec (ds1302_read_byte(ds1302_date_add) );   //日 
  70   1        dat[3]=bcdtodec (ds1302_read_byte(ds1302_day_add) );    //周  
  71   1        dat[4]=bcdtodec (ds1302_read_byte(ds1302_hr_add) );   //时 
  72   1        dat[5]=bcdtodec (ds1302_read_byte(ds1302_min_add) );    //分 
  73   1        dat[6]=bcdtodec ((ds1302_read_byte(ds1302_sec_add))&0x7f );//秒，屏蔽秒的第7位，避免超出59
  74   1      }
  75          
  76          
  77          //向DS1302写入一字节数据
  78          void ds1302_write_byte(unsigned char addr, unsigned char d){
  79   1        unsigned char i;
  80   1        RST=1;          //启动DS1302总线  
  81   1        //写入目标地址：addr
  82   1        addr = addr & 0xFE;   //最低位置零，寄存器0位为0时写，为1时读
  83   1        for (i = 0; i < 8; i ++) {
  84   2          if (addr & 0x01) {
  85   3            IO=1;
  86   3            }
  87   2          else {
  88   3            IO=0;
  89   3            }
  90   2          SCLK=1;      //产生时钟
  91   2          SCLK=0;
  92   2          addr = addr >> 1;
  93   2          } 
  94   1        //写入数据：d
  95   1        for (i = 0; i < 8; i ++) {
  96   2          if (d & 0x01) {
  97   3            IO=1;
  98   3            }
  99   2          else {
 100   3            IO=0;
 101   3            }
 102   2          SCLK=1;    //产生时钟
 103   2          SCLK=0;
 104   2          d = d >> 1;
 105   2          }
 106   1        RST=0;    //停止DS1302总线
 107   1      }
 108          
 109          //从DS1302读出一字节数据
 110          unsigned char ds1302_read_byte(unsigned char addr) {
 111   1      
 112   1        unsigned char i,temp; 
 113   1        RST=1;          //启动DS1302总线
 114   1        //写入目标地址：addr
 115   1        addr = addr | 0x01;    //最低位置高，寄存器0位为0时写，为1时读
 116   1        for (i = 0; i < 8; i ++) {
C51 COMPILER V9.52.0.0   DS1302                                                            11/17/2019 12:05:30 PAGE 3   

 117   2          if (addr & 0x01) {
 118   3            IO=1;
 119   3            }
 120   2          else {
 121   3            IO=0;
 122   3            }
 123   2          SCLK=1;
 124   2          SCLK=0;
 125   2          addr = addr >> 1;
 126   2          } 
 127   1        //输出数据：temp
 128   1        for (i = 0; i < 8; i ++) {
 129   2          temp = temp >> 1;
 130   2          if (IO) {
 131   3            temp |= 0x80;
 132   3            }
 133   2          else {
 134   3            temp &= 0x7F;
 135   3            }
 136   2          SCLK=1;
 137   2          SCLK=0;
 138   2          } 
 139   1        RST=0;          //停止DS1302总线
 140   1        return temp;
 141   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    435    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
