C51 COMPILER V9.54   LCD9648                                                               06/25/2024 15:37:40 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD9648
OBJECT MODULE PLACED IN .\Obj\lcd9648.obj
COMPILER INVOKED BY: D:\Keil5C51\C51\BIN\C51.EXE App\lcd9648\lcd9648.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\App\24c02;.\App
                    -\iic;.\App\key;.\App\smg;.\Public;.\App\ds18b20;.\App\ds1302;.\App\ired;.\App\time;.\App\xpt2046;.\App\pwm;.\App\lcd1602
                    -;.\App\lcd9648) DEBUG OBJECTEXTEND PRINT(.\Obj\lcd9648.lst) OBJECT(.\Obj\lcd9648.obj)

line level    source

   1          #include "lcd9648.h"
   2          #include "font.h"
   3          
   4          /*******************************************************************************
   5          * 函 数 名       : lcd9648_spi_write_byte
   6          * 函数功能               : LCD9648 SPI传输数据
   7          * 输    入       : dat：数据
   8          * 输    出       : 无
   9          *******************************************************************************/
  10          void lcd9648_spi_write_byte(u8 dat)
  11          {
  12   1              u8 i=0;
  13   1      
  14   1              for(i=0;i<8;i++)//循环8次将一个字节传输                 
  15   1              {  
  16   2              if((dat&0x80)!=0) 
  17   2                              SDA = 1;
  18   2              else 
  19   2                              SDA = 0;
  20   2              dat<<= 1;//先写高位再写低位
  21   2                      SCL = 0;
  22   2              SCL = 1;//时钟上升沿写入数据                    
  23   2              }
  24   1      }
  25          
  26          /*******************************************************************************
  27          * 函 数 名       : lcd9648_write_cmd
  28          * 函数功能               : LCD9648写命令
  29          * 输    入       : cmd：命令
  30          * 输    出       : 无
  31          *******************************************************************************/
  32          void lcd9648_write_cmd(u8 cmd)
  33          {
  34   1              CS0 = 0;//使能
  35   1              RS  = 0;//选择命令
  36   1              lcd9648_spi_write_byte(cmd);//发送命令
  37   1              CS0 = 1;//失能  
  38   1      }
  39          
  40          /*******************************************************************************
  41          * 函 数 名       : lcd9648_write_dat
  42          * 函数功能               : LCD9648写数据
  43          * 输    入       : dat：数据
  44          * 输    出       : 无
  45          *******************************************************************************/
  46          void lcd9648_write_dat(u8 dat)
  47          {
  48   1              CS0 = 0;//使能
  49   1              RS  = 1;//选择数据
  50   1              lcd9648_spi_write_byte(dat);//发送数据
  51   1              CS0 = 1;//失能  
  52   1      }
  53          
C51 COMPILER V9.54   LCD9648                                                               06/25/2024 15:37:40 PAGE 2   

  54          /*******************************************************************************
  55          * 函 数 名       : lcd9648_init
  56          * 函数功能               : LCD9648初始化
  57          * 输    入       : 无
  58          * 输    出       : 无
  59          *******************************************************************************/
  60          void lcd9648_init(void)
  61          {
  62   1              RST=1;  
  63   1              delay_ms(10);
  64   1              RST=0;
  65   1              delay_ms(10);
  66   1              RST=1;
  67   1              delay_ms(10);//复位
  68   1      
  69   1          lcd9648_write_cmd(0xe2);              //软件复位
  70   1              lcd9648_write_cmd(0xc8);                  //0xC8普通方向选择选择反向，0xC0为正常方向
  71   1              lcd9648_write_cmd(0xa0);                  //0xA0段方向选择正常方向（0xA1为反方向
  72   1              lcd9648_write_cmd(0x2f);
  73   1              lcd9648_write_cmd(0x26);
  74   1              lcd9648_write_cmd(0x81);                  //背景光对比度
  75   1              lcd9648_write_cmd(0x10);
  76   1              lcd9648_write_cmd(0xaf);                  //开启显示
  77   1              lcd9648_write_cmd(0x40);                  //设置滚动一行命令
  78   1      }
  79          
  80          /*******************************************************************************
  81          * 函 数 名       : lcd9648_clear
  82          * 函数功能               : LCD9648清屏
  83          * 输    入       : 无
  84          * 输    出       : 无
  85          *******************************************************************************/
  86          void lcd9648_clear(void)
  87          {
  88   1              u8 i,j;
  89   1      
  90   1              for(i=0;i<9;i++)//一共9页
  91   1              {
  92   2                      lcd9648_write_cmd(0x40);//设置滚动一行命令
  93   2                      lcd9648_write_cmd(0xb0+i);//页地址
  94   2                      lcd9648_write_cmd(0x10);//列高字节地址
  95   2                      lcd9648_write_cmd(0x00);//列低字节地址
  96   2                      
  97   2                      for(j = 0; j < LCD_WIDTH; j++)//每一行的像素点
  98   2                      {
  99   3                              lcd9648_write_dat(0x00);//不显示        
 100   3                      }       
 101   2              }
 102   1      }
 103          
 104          //在指定位置显示一个16*8字符
 105          //x,y:起始坐标 x:0-96 y:0-2 
 106          //num:要显示的字符:" "--->"~"
 107          void lcd_show_char(u8 x,u8 y,u8 num)
 108          {
 109   1              unsigned char i, x1, x2;
 110   1      
 111   1              if(x>96||y>2)return;//超出范围了
 112   1      
 113   1              y *= 2;
 114   1              y += 0xB0;                              //求取Y坐标的值
 115   1              x1 = (x >> 4) & 0x0F;   //由于X坐标要两句命令，分高低4位，所以这里先取出高4位
C51 COMPILER V9.54   LCD9648                                                               06/25/2024 15:37:40 PAGE 3   

 116   1              x2 = x & 0x0F;          //去低四位
 117   1      
 118   1              lcd9648_write_cmd(y);   //页地址 y坐标
 119   1              lcd9648_write_cmd(0x10+x1);     //列高字节地址 x坐标
 120   1              lcd9648_write_cmd(0x00+x2);     //列低字节地址
 121   1      
 122   1              num=num-' ';//得到偏移后的值（ASCII字库是从空格开始取模，所以-' '就是对应字符的字库）
 123   1      
 124   1              for(i = 0;i < 8;i++) 
 125   1              {
 126   2                      lcd9648_write_dat(ascii_1608[num][i*2]);
 127   2              }
 128   1              
 129   1              lcd9648_write_cmd(y+1); //页地址 y坐标
 130   1              lcd9648_write_cmd(0x10+x1);     //列高字节地址 x坐标
 131   1              lcd9648_write_cmd(0x00+x2);     //列低字节地址
 132   1              
 133   1              for(i = 0;i < 8;i++) 
 134   1              {
 135   2                      lcd9648_write_dat(ascii_1608[num][i*2+1]);
 136   2              }
 137   1      
 138   1      }
 139          
 140          //显示字符串
 141          //x,y:起点坐标 x:0-96 y:0-2 
 142          //*p:字符串起始地址               
 143          void lcd_show_string(u8 x,u8 y,u8 Num,u8 *p)
 144          {
 145   1              u8 i = 0;
 146   1              while(i < Num)
 147   1              {
 148   2                      lcd_show_char(x,y,*p);
 149   2                      x+=8;
 150   2                      p++;
 151   2                      i++;
 152   2                      if(*p == '\0' || i >= 12)
 153   2                              return;
 154   2              }
 155   1      }
 156          
 157          //m^n函数
 158          //返回值:m^n次方.
 159          u32 lcd_pow(u8 m,u8 n)
 160          {
 161   1              u32 result=1;    
 162   1              while(n--)result*=m;    
 163   1              return result;
 164   1      }       
 165          
 166          //显示数字,
 167          //x,y:起点坐标
 168          //num:数值(0~999999999);         
 169          //len:长度(即要显示的位数)
 170          //mode:0-高位空字符填充  1-高位补0 
 171          void lcd_show_num(u8 x,u8 y,u32 num,u8 len,u8 mode)
 172          {
 173   1              u8 t,temp;
 174   1              u8 enshow=0;                                               
 175   1              for(t=0;t<len;t++)
 176   1              {
 177   2                      temp=(num/lcd_pow(10,len-t-1))%10;
C51 COMPILER V9.54   LCD9648                                                               06/25/2024 15:37:40 PAGE 4   

 178   2                      if(enshow==0&&t<(len-1))
 179   2                      {
 180   3                              if(temp==0)
 181   3                              {
 182   4                                      if(mode == 1)
 183   4                                              lcd_show_char(x+(16/2)*t,y,'0');
 184   4                                      else
 185   4                                              lcd_show_char(x+(16/2)*t,y,' ');
 186   4                                      continue;
 187   4                              }else enshow=1; 
 188   3                               
 189   3                      }
 190   2                      lcd_show_char(x+(16/2)*t,y,temp+'0'); 
 191   2              }
 192   1      }
 193          
 194          //显示16*16汉字
 195          //x,y:起点坐标 x:0-96 y:0-2
 196          //*cn:字符串起始地址              
 197          void lcd_show_16HZ(u8 x, u8 y, u8 *cn)
 198          {
 199   1              u8 j, x1, x2, wordNum;
 200   1              
 201   1              if(x>96||y>5)return;//超出范围了
 202   1      
 203   1              y *= 2;
 204   1              y += 0xB0;                              //求取Y坐标的值
 205   1      
 206   1              while ( *cn != '\0')     //在C语言中字符串结束以‘\0’结尾
 207   1              {
 208   2                      x1 = (x >> 4) & 0x0F;   //由于X坐标要两句命令，分高低4位，所以这里先取出高4位
 209   2                      x2 = x & 0x0F;          //去低四位
 210   2      
 211   2                      lcd9648_write_cmd(y);   //页地址 y坐标
 212   2                      lcd9648_write_cmd(0x10+x1);     //列高字节地址 x坐标
 213   2                      lcd9648_write_cmd(0x00+x2);     //列低字节地址
 214   2      
 215   2                      for (wordNum=0; wordNum<30; wordNum++)
 216   2                      {
 217   3                              //--查询要写的字在字库中的位置--//
 218   3                              if ((CnChar16x16[wordNum].Index[0] == *cn)&&(CnChar16x16[wordNum].Index[1] == *(cn+1)))
 219   3                              {
 220   4                                      for (j=0; j<32; j++) //写一个字
 221   4                                      {
 222   5                                              if (j == 16)     //由于16X16用到两个Y坐标，当大于等于16时，切换坐标
 223   5                                              {
 224   6                                                      lcd9648_write_cmd(y+1); //页地址 y坐标
 225   6                                                      lcd9648_write_cmd(0x10+x1);     //列高字节地址 x坐标
 226   6                                                      lcd9648_write_cmd(0x00+x2);     //列低字节地址
 227   6                                              }
 228   5                                              lcd9648_write_dat(CnChar16x16[wordNum].Msk[j]);
 229   5                                      }
 230   4                                      x += 16;
 231   4                              }
 232   3                      }
 233   2                      cn += 2;        //下一个字
 234   2              }
 235   1      }
 236          
 237          //显示图片
 238          void lcd_show_Image(u8 *p)
 239          {
C51 COMPILER V9.54   LCD9648                                                               06/25/2024 15:37:40 PAGE 5   

 240   1              unsigned char i,j;
 241   1      
 242   1              for(i=0;i<6;i++)
 243   1              {
 244   2                      lcd9648_write_cmd(0x40);
 245   2                      lcd9648_write_cmd(0xb0|i);
 246   2                      lcd9648_write_cmd(0x10);
 247   2                      lcd9648_write_cmd(0x00);
 248   2                      for(j = 0;j < 96;j++)
 249   2                      {
 250   3                              lcd9648_write_dat(*p);
 251   3                              p++;
 252   3                      }
 253   2              }
 254   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    798    ----
   CONSTANT SIZE    =   1792    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      30
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
